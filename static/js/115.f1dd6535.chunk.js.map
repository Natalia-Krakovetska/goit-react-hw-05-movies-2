{"version":3,"file":"static/js/115.f1dd6535.chunk.js","mappings":"mTACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,qCACSC,IAFA,cAC1BE,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qDAMlBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCAC+BK,EAD/B,gCADQ,cACzBH,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAMjBG,EAAyB,mCAAG,WAAMC,GAAN,uFAChBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACEP,EADF,oBADgB,cACjCE,EADiC,yBAIhCA,EAASC,MAJuB,2CAAH,sDAQzBK,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAMhBM,EAAgB,mCAAG,WAAMF,GAAN,uFACPR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qD,iJC7BhBO,E,OAAWC,GAAAA,GAAH,8H,kBCwCrB,EAnCa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAZAE,QAAQC,IAAIL,IACZM,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBX,EAAAA,EAAAA,IAAiBO,GAFxC,OAEUZ,EAFV,OAGIW,EAAQX,EAAKU,MAHjB,gDAKIO,MAAM,SALV,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACN,KACI,yBACLF,IACC,SAACH,EAAD,UACGG,EAAKS,KAAI,SAAAC,GACR,OACE,2BACI,SAAC,KAAD,CACEC,IAAKD,EAAME,aAAN,0CAAwDF,EAAME,cAvBlE,yHAwBDC,IAAKH,EAAMI,KACXC,MAAM,SAEV,wBAAKL,EAAMI,QACX,uCAAeJ,EAAMM,eAPdN,EAAMhB,GAUlB,OAIR,C,mICvCYuB,EAAiBnB,EAAAA,GAAAA,KAAH,2GAMdoB,EAAWpB,EAAAA,GAAAA,IAAH,kFAKRqB,EAAcrB,EAAAA,GAAAA,IAAH,0D","sources":["api-service/Api.jsx","components/cast/Cast.styled.js","components/cast/Cast.jsx","components/moviesList/movieList.styled.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'b19297acdc563e9276d9a5dae9c54e60';\n\nexport const fetchTrendingMovie = async () => {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n};\nexport const fetchSearchMovies = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${keyword}&page=1&include_adult=false`\n  );\n  return response.data;\n};\nexport const fetchFullMovieInformation = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n\n\n};\nexport const fetchMovieActors = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const fetchMovieReview = async id=> {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};","import styled from 'styled-components';\nexport const CastList = styled.ul`\ndisplay: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 10px;\n  list-style: none;\n`","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieActors } from '../../api-service/Api';\nimport {CastList} from './Cast.styled'\nimport {MovieImg} from '../../components/moviesList/movieList.styled'\nconst defaultSrc = \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png\";\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  console.log(cast);\n  useEffect(() => {\n    async function getCast() {\n      try {\n        const data = await fetchMovieActors(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        alert('Error');\n      }\n    }\n    getCast();\n  }, [movieId]);\n  return  <div>\n    {cast && (\n      <CastList>\n        {cast.map(actor => {\n          return (\n            <li key={actor.id}>\n                <MovieImg\n                  src={actor.profile_path ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}` : defaultSrc}\n                  alt={actor.name}\n                  width=\"150\"\n                />\n              <h3>{actor.name}</h3>\n              <p>Character: {actor.character}</p>\n            </li>\n          );\n        })}\n      </CastList>\n    )}\n  </div>\n};\nexport default Cast;\n","import styled from 'styled-components';\nexport const MovieContainer = styled.main`\ndisplay: grid;\n  grid-template-columns: repeat(auto-fit, 300px);\n  gap: 16px;\n\n`\nexport const MovieImg = styled.img`\ndisplay: block;\n    height: auto;\n    max-width: 100%;\n`\nexport const CardWrapper = styled.div`\n box-shadow: 0 4px 2px -2px gray;\n`"],"names":["axios","KEY","fetchTrendingMovie","response","data","fetchSearchMovies","keyword","fetchFullMovieInformation","id","fetchMovieActors","fetchMovieReview","CastList","styled","useState","cast","setCast","movieId","useParams","console","log","useEffect","alert","getCast","map","actor","src","profile_path","alt","name","width","character","MovieContainer","MovieImg","CardWrapper"],"sourceRoot":""}