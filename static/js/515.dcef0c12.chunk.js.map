{"version":3,"file":"static/js/515.dcef0c12.chunk.js","mappings":"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","sources":["api-service/Api.jsx","components/moviesList/MoviesList.jsx","components/moviesList/movieList.styled.js","components/searchBox/SearchBox.styled.js","components/searchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'b19297acdc563e9276d9a5dae9c54e60';\n\nexport const fetchTrendingMovie = async () => {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n};\nexport const fetchSearchMovies = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${keyword}&page=1&include_adult=false`\n  );\n  return response.data;\n};\nexport const fetchFullMovieInformation = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n\n\n};\nexport const fetchMovieActors = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const fetchMovieReview = async id=> {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {MovieContainer, MovieImg} from \"./movieList.styled\"\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieContainer>\n      {movies.map(movie => (\n        <div key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                      <MovieImg\n                          src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                          alt={movie.title}\n                          width=\"300\"\n                          height=\"300\"\n                      />\n\n                  <p>{movie.original_title}</p>    \n          </Link>\n        </div>\n      ))}\n    </MovieContainer>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};","import styled from 'styled-components';\nexport const MovieContainer = styled.main`\ndisplay: grid;\n  grid-template-columns: repeat(auto-fit, 300px);\n  gap: 16px;\n`\nexport const MovieImg = styled.img`\ndisplay: block;\n    height: auto;\n    max-width: 100%;\n`","import styled from 'styled-components';\n\nexport const SearchbarWrapper = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: orange;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BsSearch } from 'react-icons/bs';\nimport {\n  SearchbarWrapper,\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n  const handleChange = event => {\n    const { value } = event.target;\n    setSearchValue(value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchValue.trim() === '') {\n      return alert('Please enter keyword for image search');\n    }\n    onSubmit(searchValue);\n    setSearchValue('');\n  };\n\n  return (\n    <SearchbarWrapper>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <BsSearch fill=\"blue\" />\n        </SearchFormButton>\n\n        <SearchFormInput\n          name=\"searchValue\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchValue}\n          onChange={handleChange}\n        />\n      </SearchForm>\n    </SearchbarWrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { useSearchParams } from 'react-router-dom';\nimport { MoviesList } from '../components/moviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { SearchBox } from '../components/searchBox/SearchBox';\nimport { fetchSearchMovies } from '../api-service/Api';\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const movieTitle = searchParams.get('query') ?? '';\n\n  const handleFormSubmit = searchValue => {\n    setSearchParams({ query: searchValue });\n  };\n  useEffect(() => {\n    async function getMoviesByKeyword() {\n      if (movieTitle === '') {\n        return;\n      }\n      try {\n        const data = await fetchSearchMovies(movieTitle);\n        if (data.results.length > 0) {\n          setMovies(data.results);\n        }\n      } catch (error) {\n        alert('Error');\n      }\n    }\n    getMoviesByKeyword();\n  }, [movieTitle]);\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleFormSubmit} />\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","KEY","fetchTrendingMovie","response","data","fetchSearchMovies","keyword","fetchFullMovieInformation","id","fetchMovieActors","fetchMovieReview","MoviesList","movies","location","useLocation","map","movie","to","state","from","src","poster_path","alt","title","width","height","original_title","MovieContainer","styled","MovieImg","SearchbarWrapper","SearchForm","SearchFormButton","SearchFormInput","SearchBox","onSubmit","useState","searchValue","setSearchValue","event","preventDefault","trim","alert","type","fill","name","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","movieTitle","get","useEffect","results","length","getMoviesByKeyword","query"],"sourceRoot":""}