{"version":3,"file":"static/js/622.d4fc9757.chunk.js","mappings":"mTACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,qCACSC,IAFA,cAC1BE,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qDAMlBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCAC+BK,EAD/B,gCADQ,cACzBH,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAMjBG,EAAyB,mCAAG,WAAMC,GAAN,uFAChBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACEP,EADF,oBADgB,cACjCE,EADiC,yBAIhCA,EAASC,MAJuB,2CAAH,sDAQzBK,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAMhBM,EAAgB,mCAAG,WAAMF,GAAN,uFACPR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qD,oKC5BhBO,EAAmBC,EAAAA,GAAAA,IAAH,qG,SCChBC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACE,8BACGA,IACC,UAACH,EAAD,WACGG,EAAMC,aACL,gBACEC,IAAG,0CAAqCF,EAAMC,aAC9CE,IAAKH,EAAMI,MACXC,MAAM,MACNC,OAAO,SAGT,gBACEJ,IAAI,yHACJC,IAAKH,EAAMI,MACXC,MAAM,MACNC,OAAO,SAGX,4BACE,4BACE,0BACGN,EAAMI,MADT,IACiBJ,EAAMO,aAAaC,MAAM,EAAG,GAD7C,QAGA,wCAAgBC,KAAKC,MAA2B,GAArBV,EAAMW,cAAjC,WAEF,4BACE,uCACA,uBAAIX,EAAMY,eAEZ,4BACE,qCACA,yBACGZ,EAAMa,OAAOC,KAAI,SAAAC,GAChB,OAAO,uBAAmBA,EAAMC,MAAjBD,EAAMrB,GACtB,gBAQhB,EC5CYuB,GAAanB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAH,4OCAVqB,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,SAACJ,EAAD,CAAYG,GAAIA,EAAhB,SACGC,GAGN,ECyCD,EA3CqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOtB,EAAP,KAAcuB,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAchD,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBvC,EAAAA,EAAAA,IAA0B+B,GAFjD,OAEUlC,EAFV,OAGIiC,EAASjC,GAHb,gDAKI2C,MAAM,SALV,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACV,KAGF,iCACE,0BACE,UAACL,EAAD,CAAUC,GAAIQ,EAAOO,QAArB,WACQ,gBAAKC,MAAM,6BAA6B/B,MAAM,KAAKC,OAAO,KAAK+B,SAAS,eAAeC,UAAU,mBAAmBC,QAAQ,YAA5H,UACd,iBAAMF,SAAS,UAAUG,EAAE,oJAFrB,gBAMF,SAACzC,EAAD,CAAWC,MAAOA,KAClB,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMoB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,SAIP,C","sources":["api-service/Api.jsx","components/movieCard/MovieCard.styled.js","components/movieCard/MovieCard.jsx","components/backLink/BackLink.styled.js","components/backLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'b19297acdc563e9276d9a5dae9c54e60';\n\nexport const fetchTrendingMovie = async () => {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n};\nexport const fetchSearchMovies = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${keyword}&page=1&include_adult=false`\n  );\n  return response.data;\n};\nexport const fetchFullMovieInformation = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n\n\n};\nexport const fetchMovieActors = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const fetchMovieReview = async id=> {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};","import styled from 'styled-components';\n\nexport const MovieCardWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieCardWrapper } from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  return (\n    <>\n      {movie && (\n        <MovieCardWrapper>\n          {movie.poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n              width=\"300\"\n              height=\"300\"\n            />\n          ) : (\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png\"\n              alt={movie.title}\n              width=\"300\"\n              height=\"300\"\n            />\n          )}\n          <div>\n            <div>\n              <h2>\n                {movie.title}({movie.release_date.slice(0, 4)})\n              </h2>\n              <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n            </div>\n            <div>\n              <h3>Overview:</h3>\n              <p>{movie.overview}</p>\n            </div>\n            <div>\n              <h3>Genres:</h3>\n              <div>\n                {movie.genres.map(genre => {\n                  return <p key={genre.id}>{genre.name}</p>;\n                })}\n              </div>\n            </div>\n          </div>\n        </MovieCardWrapper>\n      )}\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: orange;\n  }\n`;","import PropTypes from 'prop-types';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};","import { fetchFullMovieInformation } from '../api-service/Api';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useRef, useEffect } from 'react';\nimport { MovieCard } from '../components/movieCard/MovieCard';\nimport { BackLink } from 'components/backLink/BackLink';\n\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n    const locRef = useRef(location.state?.from ?? '/movies');\n  \n  useEffect(() => {\n    async function getFullMovieInformation() {\n      try {\n        const data = await fetchFullMovieInformation(movieId);\n        setMovie(data);\n      } catch (error) {\n        alert('Error');\n      }\n    }\n    getFullMovieInformation();\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        <BackLink to={locRef.current}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fillRule=\"currentColor\" className=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\" >\n  <path fillRule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"/>\n</svg>\n          Go back</BackLink>\n      </div>\n      <MovieCard movie={movie} />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","KEY","fetchTrendingMovie","response","data","fetchSearchMovies","keyword","fetchFullMovieInformation","id","fetchMovieActors","fetchMovieReview","MovieCardWrapper","styled","MovieCard","movie","poster_path","src","alt","title","width","height","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","StyledLink","Link","BackLink","to","children","useState","setMovie","movieId","useParams","location","useLocation","locRef","useRef","state","from","useEffect","alert","getFullMovieInformation","current","xmlns","fillRule","className","viewBox","d"],"sourceRoot":""}