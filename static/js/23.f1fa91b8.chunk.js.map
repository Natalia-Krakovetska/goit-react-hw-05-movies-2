{"version":3,"file":"static/js/23.f1fa91b8.chunk.js","mappings":"kTACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,qCACSC,IAFA,cAC1BE,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qDAMlBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCAC+BK,EAD/B,gCADQ,cACzBH,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAMjBG,EAAyB,mCAAG,WAAMC,GAAN,uFAChBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACEP,EADF,oBADgB,cACjCE,EADiC,yBAIhCA,EAASC,MAJuB,2CAAH,sDAQzBK,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAMhBM,EAAgB,mCAAG,WAAMF,GAAN,uFACPR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qD,wGCQ7B,UAnCgB,WACZ,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAYC,EAAAA,EAAAA,MAAZD,QAeN,OAdAE,QAAQC,IAAIL,IAEdM,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBR,EAAAA,EAAAA,IAAiBI,GAFxC,OAEUV,EAFV,OAGIS,EAAWT,EAAKe,SAHpB,gDAKIC,MAAM,SALV,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGG,gCACiB,IAAnBF,EAAQU,SAAgB,mEACxBV,EAAQU,OAAS,IAChB,yBACGV,EAAQW,KAAI,SAAAC,GACX,OACE,4BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFHF,EAAOhB,GAKpB,QAKV,C","sources":["api-service/Api.jsx","components/reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'b19297acdc563e9276d9a5dae9c54e60';\n\nexport const fetchTrendingMovie = async () => {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n};\nexport const fetchSearchMovies = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${keyword}&page=1&include_adult=false`\n  );\n  return response.data;\n};\nexport const fetchFullMovieInformation = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n\n\n};\nexport const fetchMovieActors = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const fetchMovieReview = async id=> {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieReview } from '../../api-service/Api';\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n    console.log(reviews);\n    \n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const data = await fetchMovieReview(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        alert('Error');\n      }\n    }\n    getReviews();\n  }, [movieId]);\n    \n    return (\n         <>\n      {reviews.length === 0 && <p>We don't have any reviews for the movie</p>}\n      {reviews.length > 0 && (\n        <div>\n          {reviews.map(review => {\n            return (\n              <div key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </>\n    )\n}\nexport default Reviews;\n"],"names":["axios","KEY","fetchTrendingMovie","response","data","fetchSearchMovies","keyword","fetchFullMovieInformation","id","fetchMovieActors","fetchMovieReview","useState","reviews","setReviews","movieId","useParams","console","log","useEffect","results","alert","getReviews","length","map","review","author","content"],"sourceRoot":""}